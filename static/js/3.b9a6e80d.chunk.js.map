{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","assets/images/landscape-mountain.jpg","assets/images/facebook.svg","assets/images/website.svg","assets/images/vk.svg","assets/images/twitter_icon-icons.com_66093.svg","assets/images/instagram_108043.svg","assets/images/circle-youtube_icon-icons.com_66837.svg","assets/images/github_icon-icons.com_65450.svg","assets/images/mainLink.svg","Components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/MyPosts/MyPostsContainer.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileStatus","props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","onDoubleClick","ProfileInfo","profile","className","styles","img","alt","src","mountain","descriptionBlock","photos","large","name","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","to","contacts","facebook","imgContact","website","vk","twitter","instagram","youtube","github","mainLink","mainlink","Preloader","Post","item","message","likesCount","MyPosts","React","memo","postsElements","posts","map","post","postsBlock","AddPostFormRedux","onSubmit","values","addPost","newPostText","maxLength30","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","validate","requiredField","MyPostsContainer","connect","state","profilePage","Profile","ProfileContainer","userID","this","match","params","userId","authorizedUserId","history","getProfile","getStatus","Component","compose","auth","id","isAuth","withRouter"],"mappings":"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","file":"static/js/3.b9a6e80d.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__L93lL\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2Hvz4\",\"name\":\"ProfileInfo_name__1nY0P\",\"aboutMe\":\"ProfileInfo_aboutMe__2Oxph\",\"imgContact\":\"ProfileInfo_imgContact__1HF-1\",\"status\":\"ProfileInfo_status__18nX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1l52N\",\"posts\":\"MyPosts_posts__1FEXx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1vbnd\"};","export default __webpack_public_path__ + \"static/media/landscape-mountain.807797b4.jpg\";","export default __webpack_public_path__ + \"static/media/facebook.82e7fc48.svg\";","export default __webpack_public_path__ + \"static/media/website.b2c98094.svg\";","export default __webpack_public_path__ + \"static/media/vk.27011227.svg\";","export default __webpack_public_path__ + \"static/media/twitter_icon-icons.com_66093.fd74a8db.svg\";","export default __webpack_public_path__ + \"static/media/instagram_108043.f0532b1f.svg\";","export default __webpack_public_path__ + \"static/media/circle-youtube_icon-icons.com_66837.b6de46d0.svg\";","export default __webpack_public_path__ + \"static/media/github_icon-icons.com_65450.8e6e5405.svg\";","export default __webpack_public_path__ + \"static/media/mainLink.c11183f3.svg\";","import React, {ChangeEvent, useEffect, useState} from 'react'\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nfunction ProfileStatus(props: PropsType) {\r\n\r\n    let [editMode, setEditMode] = useState<boolean>(false)\r\n    let [status, setStatus] = useState<string>(props.status)\r\n\r\n    useEffect(() => {                   //перерисовывается, когда меняется статус, иначе иногда пустой инпут\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e:  ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !editMode\r\n                    ? <span onDoubleClick={activateEditMode}>{props.status || 'No status'}</span>\r\n                    : <div><input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                                  value={status}/></div>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ProfileStatus;\r\n\r\n","import React from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\nimport {ProfileType} from \"../../../redux/store\";\r\nimport {Preloader} from \"../../Common/Preloader/Preloader\";\r\nimport {Link} from 'react-router-dom';\r\nimport mountain from \"../../../assets/images/landscape-mountain.jpg\"\r\nimport facebook from \"./../../../assets/images/facebook.svg\"\r\nimport website from \"../../../assets/images/website.svg\"\r\nimport vk from \"../../../assets/images/vk.svg\"\r\nimport twitter from \"../../../assets/images/twitter_icon-icons.com_66093.svg\"\r\nimport instagram from \"../../../assets/images/instagram_108043.svg\"\r\nimport youtube from \"../../../assets/images/circle-youtube_icon-icons.com_66837.svg\"\r\nimport github from \"../../../assets/images/github_icon-icons.com_65450.svg\"\r\nimport mainlink from \"../../../assets/images/mainLink.svg\"\r\nimport ProfileStatus from \"./ProfileStatusWithHooks\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nfunction ProfileInfo(props: PropsType) {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    } else {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <img className={styles.img} alt={'123'}\r\n                         src={mountain}/>\r\n                </div>\r\n                <div className={styles.descriptionBlock}>\r\n                    <img alt={'ProfilePhoto'}\r\n                         src={props.profile.photos.large || ''}/>\r\n                </div>\r\n                <div className={styles.name}>\r\n                    {props.profile.fullName}\r\n                </div>\r\n                <div className={styles.status}>\r\n                    <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                </div>\r\n                <div className={styles.aboutMe}>\r\n                    About me:\r\n                    <div>\r\n                        {props.profile.aboutMe}\r\n                    </div>\r\n\r\n                </div>\r\n                <div>\r\n                    <div>{'Looking for a job: ' + props.profile.lookingForAJob}</div>\r\n                    {props.profile.lookingForAJob ? <div>{props.profile.lookingForAJobDescription}</div> : ''}\r\n                </div>\r\n                <div>\r\n                    <Link to={props.profile.contacts.facebook || ''}>\r\n                        <img src={facebook} alt=\"facebook\" className={styles.imgContact}/>\r\n                    </Link>\r\n                    <Link to={props.profile.contacts.website || ''}>\r\n                        <img src={website} alt=\"website\" className={styles.imgContact}/>\r\n                    </Link>\r\n                    <Link to={props.profile.contacts.vk || ''}>\r\n                        <img src={vk} alt=\"vk\" className={styles.imgContact}/>\r\n                    </Link>\r\n                    <Link to={props.profile.contacts.twitter || ''}>\r\n                        <img src={twitter} alt=\"twitter\" className={styles.imgContact}/>\r\n                    </Link>\r\n                    <Link to={props.profile.contacts.instagram || ''}>\r\n                        <img src={instagram} alt=\"instagram\" className={styles.imgContact}/>\r\n                    </Link>\r\n                    <Link to={props.profile.contacts.youtube || ''}>\r\n                        <img src={youtube} alt=\"youtube\" className={styles.imgContact}/>\r\n                    </Link>\r\n                    <Link to={props.profile.contacts.github || ''}>\r\n                        <img src={github} alt=\"github\" className={styles.imgContact}/>\r\n                    </Link>\r\n                    <Link to={props.profile.contacts.mainLink || ''}>\r\n                        <img src={mainlink} alt=\"mainLink\" className={styles.imgContact}/>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n","import React from 'react';\r\nimport styles from './Post.module.css';\r\n\r\ntype MessageType = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nfunction Post(props: MessageType) {\r\n    return (\r\n        <div className={styles.item}>\r\n            <img src=\"https://pbs.twimg.com/profile_images/378800000619398984/7bd4096c5e612dea658f2686d1bee6df.jpeg\"\r\n                 alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport styles from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {PostsType} from \"../../../redux/store\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\ntype PropsType = {\r\n    posts: Array<PostsType>\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nconst MyPosts = React.memo((props: PropsType) => {\r\n\r\n    let postsElements = props.posts.map(post => <Post message={post.message} likesCount={post.likesCount}/>);\r\n\r\n    let addNewPost = (values: FormDataType) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.postsBlock}>\r\n            <h3>MyPosts</h3>\r\n            <div>\r\n\r\n                <AddPostFormRedux onSubmit={addNewPost}/>\r\n\r\n                <div className={styles.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;\r\n\r\ntype FormDataType = {\r\n    newPostText: string\r\n}\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\n\r\nfunction AddPostForm(props: InjectedFormProps<FormDataType>) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newPostText'} placeholder={'Enter your text'} validate={[requiredField, maxLength30]}/>\r\n            </div>\r\n            <button>Add post</button>\r\n            <button>Remove</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm<FormDataType>({form: 'AddPostForm'})(AddPostForm)","import React from 'react';\r\nimport {addPost} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {PostsType, RootStateType} from \"../../../redux/store\";\r\n\r\ntype MapStatePropsType = {\r\n    posts: Array<PostsType>\r\n    }\r\ntype MapDispatchPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../redux/store\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nfunction Profile(props: PropsType) {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from 'react-redux';\r\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profileReducer\";\r\nimport {ProfileType, RootStateType} from \"../../redux/store\";\r\nimport {Redirect, RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from 'redux';\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    authorizedUserId: number | null\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    getProfile: (userId: number | null) => void\r\n    getStatus: (userId: number | null) => void\r\n    updateStatus: (status: string) => void\r\n}\r\ntype ParamsType = {\r\n    userId: string\r\n}\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & RouteComponentProps<ParamsType>\r\n\r\nclass ProfileContainer extends React.Component<PropsType, any> {\r\n\r\n    componentDidMount() {\r\n\r\n        let userID: number | null = +this.props.match.params.userId\r\n        if (!userID) {\r\n            userID = this.props.authorizedUserId\r\n            if (!userID) {\r\n               this.props.history.push('login')\r\n            }\r\n        }\r\n        this.props.getProfile(userID)\r\n        this.props.getStatus(userID)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <Profile profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStatePropsType => (\r\n    {profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n    )\r\n\r\nexport default compose<React.ComponentType>(connect (mapStateToProps, {getProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    /*withAuthRedirect*/)\r\n    (ProfileContainer)"],"sourceRoot":""}