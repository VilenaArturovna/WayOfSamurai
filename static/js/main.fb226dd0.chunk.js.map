{"version":3,"sources":["redux/UsersReducer.ts","Components/Navbar/Navbar.module.css","api/api.ts","serviceWorker.ts","redux/authReducer.ts","redux/appReducer.ts","redux/redux-store.ts","Components/Navbar/Navbar.tsx","Components/News/News.tsx","Components/Music/Music.tsx","Components/Settings/Settings.tsx","Components/Header/Header.tsx","Components/Header/HeaderContainer.tsx","Components/Login/Login.tsx","App.tsx","index.tsx","assets/images/bars.svg","Components/Common/Preloader/Preloader.tsx","Components/Common/FormsControls/FormsControls.module.css","Components/Common/FormsControls/FormsControls.tsx","utils/validators/validators.ts","Components/Header/Header.module.css","redux/profileReducer.ts","redux/dialogsReducer.ts"],"names":["initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","u","id","userId","followed","filter","followSuccess","unfollowSuccess","setUsers","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","getUsersTC","dispatch","a","usersAPI","getUsers","data","items","totalCount","onPageChangedTC","pageNumber","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","followAPI","unfollow","module","exports","instance","axios","create","baseURL","withCredentials","headers","page","get","then","response","authAPI","authMe","login","post","logout","delete","profileAPI","getProfile","getStatus","updateStatus","newStatus","put","status","Boolean","window","location","hostname","match","email","isAuth","setAuthUserDataAC","payload","getAuthUserData","initialized","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","styles","nav","item","to","activeClassName","active","News","props","Music","Settings","Header","header","alt","src","loginBlock","onClick","HeaderContainer","this","React","Component","connect","LoginReduxForm","reduxForm","onSubmit","handleSubmit","Field","component","Input","name","placeholder","validate","requiredField","error","stopSubmit","_error","messages","length","formData","DialogsContainer","lazy","UsersContainer","ProfileContainer","App","initializeApp","path","render","fallback","Preloader","withRouter","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message","preloader","Textarea","input","meta","touched","hasError","formControl","value","maxLengthCreator","maxLength","posts","likesCount","profile","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","fullName","photos","small","large","newPost","newPostText","p","addPost","setStatus","dialogs","newMessageText","sendMessage"],"mappings":"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","file":"static/js/main.fb226dd0.chunk.js","sourcesContent":["import {followAPI, usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: null\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n    status: string\r\n    followed: boolean\r\n    /*location: {\r\n        city: string\r\n        country: string\r\n    }*/\r\n}\r\nexport type UsersType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\nexport type UsersActionsTypes = ReturnType<typeof followSuccess> |\r\n    ReturnType<typeof unfollowSuccess> |\r\n    ReturnType<typeof setUsers> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setTotalUsersCount> |\r\n    ReturnType<typeof toggleIsFetching> |\r\n    ReturnType<typeof toggleIsFollowingProgress>\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\n\r\nexport const usersReducer = (state: UsersType = initialState, action: UsersActionsTypes) => {\r\n    switch (action.type) {\r\n        case 'users/FOLLOW':\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    return u.id === action.userId ? {...u, followed: true} : u\r\n                })\r\n            }\r\n        case 'users/UNFOLLOW':\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    return u.id === action.userId ? {...u, followed: false} : u\r\n                })\r\n            }\r\n        case 'users/SET-USERS':\r\n            return {...state, users: action.users}  //не копировать стэйт!!\r\n        case \"users/SET-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.currentPage}\r\n        case \"users/SET-TOTAL-USERS-COUNT\":\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        case \"users/TOGGLE-IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"users/TOGGLE-IS-FOLLOWING-PROGRESS\":\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n/*Action Creators*/\r\n\r\nexport const followSuccess = (userId: number) => ({type: 'users/FOLLOW', userId} as const)\r\nexport const unfollowSuccess = (userId: number) => ({type: 'users/UNFOLLOW', userId} as const)\r\nexport const setUsers = (users: UsersType) => ({type: 'users/SET-USERS', users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: 'users/SET-CURRENT-PAGE', currentPage} as const)\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\r\n    type: 'users/SET-TOTAL-USERS-COUNT',\r\n    totalUsersCount\r\n} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: 'users/TOGGLE-IS-FETCHING', isFetching} as const)\r\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n    type: 'users/TOGGLE-IS-FOLLOWING-PROGRESS',\r\n    isFetching,\r\n    userId\r\n} as const)\r\n\r\n/*Thunk Creators*/\r\n\r\nexport const getUsersTC = (currentPage: number, pageSize: number) =>\r\n    async (dispatch: Dispatch<UsersActionsTypes>) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(currentPage))\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\nexport const onPageChangedTC = (pageNumber: number, pageSize: number) =>\r\n    async (dispatch: Dispatch<UsersActionsTypes>) => {\r\n        dispatch(setCurrentPage(pageNumber))\r\n        dispatch(toggleIsFetching(true))\r\n        let data = await usersAPI.getUsers(pageNumber, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n    }\r\n\r\nconst followUnfollowFlow = async (dispatch: Dispatch<UsersActionsTypes>,\r\n                                  userId: number,\r\n                                  apiMethod: (userId: number) => Promise<any>,\r\n                                  actionCreator: (userId: number) => UsersActionsTypes) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId))\r\n    let data = await apiMethod(userId)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId: number) => async (dispatch: Dispatch<UsersActionsTypes>) => {\r\n    await followUnfollowFlow(dispatch, userId, followAPI.follow, followSuccess)\r\n}\r\nexport const unfollow = (userId: number) => async (dispatch: Dispatch<UsersActionsTypes>) => {\r\n    await followUnfollowFlow(dispatch, userId, followAPI.unfollow, unfollowSuccess)\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__37dn-\",\"item\":\"Navbar_item__3MW51\",\"active\":\"Navbar_active__377ZN\"};","import axios from 'axios';\r\nimport {FormDataType} from \"../Components/Login/Login\";\r\n\r\nconst instance = axios.create({\r\n        baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n        withCredentials: true,\r\n        headers: {\"API-KEY\": \"2f8b88ce-de54-4bd6-9153-b38ec847d28e\"},\r\n    }\r\n)\r\n\r\nexport const usersAPI = {\r\n    getUsers(page: number, pageSize: number) {\r\n        return instance.get(`users?page=${page}&count=${pageSize}`).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get('auth/me').then(response => response.data)\r\n    },\r\n    login(data: FormDataType) {\r\n        return instance.post('auth/login', data)\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\nexport const followAPI = {\r\n    follow(id: number) {\r\n        return instance.post('follow/' + id,).then(response => response.data)\r\n    },\r\n    unfollow(id: number) {\r\n        return instance.delete('follow/' + id,).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get('profile/status/' + userId)\r\n    },\r\n    updateStatus(newStatus: string) {\r\n        return instance.put('profile/status', {status: newStatus})\r\n    }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {FormDataType} from \"../Components/Login/Login\";\r\nimport {RootStateType} from \"./store\";\r\nimport {FormAction, stopSubmit} from \"redux-form\";\r\n\r\nexport type AuthDataType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\nexport type AuthActionsTypes = ReturnType<typeof setAuthUserDataAC> | FormAction\r\ntype ThunkType = ThunkAction<void, RootStateType, unknown, AuthActionsTypes>\r\ntype getAuthUserDataThunkType = ThunkAction<Promise<void>, RootStateType, unknown, AuthActionsTypes>\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nexport const authReducer = (state: AuthDataType = initialState, action: AuthActionsTypes) => {\r\n    switch (action.type) {\r\n        case 'auth/SET-USER-DATA':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setAuthUserDataAC = ({id, login, email, isAuth}: AuthDataType) => ({\r\n    type: 'auth/SET-USER-DATA',\r\n    payload: {id, login, email, isAuth}\r\n} as const)\r\n\r\nexport const getAuthUserData = (): getAuthUserDataThunkType =>\r\n    async (dispatch: ThunkDispatch<RootStateType, unknown, AuthActionsTypes>) => {\r\n        let data = await authAPI.authMe()\r\n        if (data.resultCode === 0) {\r\n            let {id, login, email} = data.data\r\n            let isAuth = true\r\n            dispatch(setAuthUserDataAC({id, login, email, isAuth}))\r\n        }\r\n    }\r\n\r\nexport const login = (data: FormDataType): ThunkType =>\r\n    async (dispatch: ThunkDispatch<RootStateType, unknown, AuthActionsTypes>) => {\r\n        let response = await authAPI.login(data)\r\n        if (response.data.resultCode === 0) {\r\n            await dispatch(getAuthUserData())\r\n        } else {\r\n            dispatch(stopSubmit('Login',\r\n                {_error: response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'}))\r\n        }\r\n    }\r\n\r\nexport const logout = (): ThunkType => async (dispatch: ThunkDispatch<RootStateType, unknown, AuthActionsTypes>) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        let id = null,\r\n            login = null,\r\n            email = null,\r\n            isAuth = false;\r\n        dispatch(setAuthUserDataAC({id, login, email, isAuth}))\r\n    }\r\n}\r\n\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {RootStateType} from \"./store\";\r\nimport {AuthActionsTypes, getAuthUserData} from \"./authReducer\";\r\n\r\n\r\nexport type AppType = {\r\n    initialized: boolean\r\n}\r\n\r\ntype AppActionsType = ReturnType<typeof setInitialized>\r\n\r\ntype ThunkType = ThunkAction<void, RootStateType, unknown, AppActionsType & AuthActionsTypes>\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state: AppType = initialState, action: AppActionsType) => {\r\n    switch (action.type) {\r\n        case \"SET-INITIALIZED\":\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setInitialized = () => {\r\n    return {\r\n        type: 'SET-INITIALIZED'\r\n    }\r\n}\r\n\r\nexport const initializeApp = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<RootStateType, unknown, AppActionsType>) => {\r\n        let promise = dispatch(getAuthUserData())\r\n        promise.then(() => {return dispatch(setInitialized())})\r\n\r\n    }\r\n}","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {dialogsReducer} from \"./dialogsReducer\";\r\nimport {usersReducer} from \"./UsersReducer\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport {appReducer} from \"./appReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store","import React from 'react';\r\nimport styles from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className={styles.nav}>\r\n            <div className={styles.item}>\r\n                <NavLink to='/Profile' activeClassName={styles.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to='/Dialogs' activeClassName={styles.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to='/News' activeClassName={styles.active}>News</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to='/Music' activeClassName={styles.active}>Music</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to='/Settings' activeClassName={styles.active}>Settings</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to='/Users' activeClassName={styles.active}>Users</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to='/Login' activeClassName={styles.active}>Login</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nfunction News(props: any) {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\n\r\nfunction Music(props: any) {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\n\r\nfunction Settings(props: any) {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nexport default function Header(props: PropsType) {\r\n    return (\r\n        <header className={styles.header}>\r\n            <img alt={'wallpaper'}\r\n                src=\"https://www.seekpng.com/png/full/402-4022115_some-logos-are-clickable-and-available-in-large.png\"/>\r\n            <div className={styles.loginBlock}>\r\n                {props.isAuth ? <button onClick={props.logout}>Log out</button> :\r\n                <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/authReducer\";\r\nimport {RootStateType} from \"../../redux/store\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\ntype MapDispatchPropsType = {\r\n\r\n    logout: () => void\r\n}\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass HeaderContainer extends React.Component<PropsType, any> {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {requiredField} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RootStateType} from \"../../redux/store\";\r\n\r\nexport type FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n\r\ntype PropsType = {\r\n    login: (data: FormDataType ) => void\r\n    isAuth: boolean\r\n}\r\n\r\nfunction Login(props: PropsType) {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\n\r\nfunction LoginForm (props: InjectedFormProps<FormDataType>) {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Input} name={'email'} placeholder={'E-mail'} validate={[requiredField]}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={'password'} placeholder={'Password'} type={'password'} validate={[requiredField]}/>\r\n            </div>\r\n            <div>\r\n\r\n                {props.error && <div>{props.error}</div>}\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={'rememberMe'} type={'checkbox'}/> Remember me\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({\r\n    form: 'Login'\r\n})(LoginForm)\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import React, {Suspense} from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./Components/Navbar/Navbar\";\r\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom';\r\nimport News from \"./Components/News/News\";\r\nimport Music from \"./Components/Music/Music\";\r\nimport Settings from \"./Components/Settings/Settings\";\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\nimport Login from \"./Components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport {RootStateType} from \"./redux/store\";\r\nimport {Preloader} from \"./Components/Common/Preloader/Preloader\";\r\n//ленивая загрузка\r\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./Components/Users/UsersContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./Components/Profile/ProfileContainer'));\r\n\r\ntype MapStatePropsType = {\r\n    initialized: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    initializeApp: () => void\r\n}\r\n\r\ntype PropsType = MapDispatchPropsType & MapStatePropsType\r\n\r\nclass App extends React.Component<PropsType, any> {\r\n\r\n    componentDidMount() {\r\n        debugger\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) return <Preloader/>\r\n\r\n        return (\r\n            <BrowserRouter>\r\n                <div className='app-wrapper'>\r\n                    <HeaderContainer/>\r\n                    <Navbar/>\r\n                    <div className='app-wrapper-content'>\r\n                        <Route path='/dialogs' render={() => {\r\n                            return <Suspense fallback={<Preloader />}>\r\n                                <DialogsContainer/>\r\n                            </Suspense>\r\n                        }}/>\r\n                        <Route path='/profile/:userId?'\r\n                               render={() => {\r\n                                   return <Suspense fallback={<Preloader />}>\r\n                                       <ProfileContainer/>\r\n                                   </Suspense>\r\n                               }}/>\r\n                        <Route path='/news' render={() => <News/>}/>\r\n                        <Route path='/music' render={() => <Music/>}/>\r\n                        <Route path='/settings' render={() => <Settings/>}/>\r\n                        <Route path='/users' render={() => {\r\n                            return <Suspense fallback={<Preloader />}>\r\n                                <UsersContainer/>\r\n                            </Suspense>\r\n                        }}/>\r\n                        <Route path='/login' render={() => <Login/>}/>\r\n                    </div>\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))\r\n(App);\r\n","import React from 'react';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\"\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\"\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <BrowserRouter><App /></BrowserRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","export default __webpack_public_path__ + \"static/media/bars.a2e35dd5.svg\";","import preloader from \"../../../assets/images/bars.svg\";\r\nimport React from \"react\";\r\n\r\nexport function Preloader() {\r\n    return <img src={preloader}/>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__DcP0M\",\"error\":\"FormsControls_error__3fIp0\"};","import React from \"react\";\r\nimport styles from './FormsControls.module.css'\r\n\r\nexport function Textarea({input, meta: {touched, error}, ...props}: any) {\r\n\r\n    const hasError = touched && error\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div><textarea {...input} {...props} /></div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Input({input, meta: {touched, error}, ...props}: any) {\r\n\r\n    const hasError = touched && error\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div><input {...input} {...props} /></div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}","export const requiredField = (value: string) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1xu8R\",\"loginBlock\":\"Header_loginBlock__1kA4y\"};","import {PostsPageType, PostsType, ProfileType} from \"./store\";\r\nimport {Dispatch} from 'redux';\r\nimport {profileAPI} from \"../api/api\";\r\n\r\n\r\ntype ActionsTypes = ReturnType<typeof addPost> |\r\n    ReturnType<typeof setProfile> |\r\n    ReturnType<typeof setStatus> |\r\n    ReturnType<typeof deletePost>\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hello', likesCount: 12},\r\n        {id: 2, message: 'My name is...', likesCount: 25},\r\n        {id: 2, message: 'Boo', likesCount: 209},\r\n        {id: 2, message: 'Bla-bla', likesCount: 5},\r\n    ],\r\n\r\n    profile: {\r\n        aboutMe: \"\",\r\n        contacts: {\r\n            facebook: null,\r\n            website: null,\r\n            vk: null,\r\n            twitter: null,\r\n            instagram: null,\r\n            youtube: null,\r\n            github: null,\r\n            mainLink: null\r\n        },\r\n        lookingForAJob: false,\r\n        lookingForAJobDescription: '',\r\n        fullName: \"Fake\",\r\n        userId: 3,\r\n        photos: {\r\n            small: null,\r\n            large: null\r\n        }\r\n    },\r\n    status: ''\r\n}\r\n\r\nexport const profileReducer = (state: PostsPageType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case 'profile/ADD-POST': {\r\n            let newPost: PostsType = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {...state, posts: [...state.posts, newPost]};\r\n        }\r\n        case \"profile/DELETE-POST\": {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.id)};\r\n        }\r\n        case 'profile/SET-PROFILE': {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case 'profile/SET-STATUS': {\r\n            return {...state, status: action.status}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostText: string) => ({type: 'profile/ADD-POST', newPostText} as const)\r\n\r\nexport const deletePost = (id: number) => ({type: 'profile/DELETE-POST', id} as const)\r\n\r\nexport const setProfile = (profile: ProfileType) => ({type: 'profile/SET-PROFILE', profile} as const)\r\n\r\nexport const setStatus = (status: string) => ({type: 'profile/SET-STATUS', status} as const)\r\n\r\nexport const getProfile = (userId: number) => async (dispatch: Dispatch<ActionsTypes>) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(setProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId: string) => async (dispatch: Dispatch<ActionsTypes>) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch<ActionsTypes>) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}","import {DialogsPageType} from \"./store\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Anna'},\r\n        {id: 2, name: 'Helena'},\r\n        {id: 3, name: 'Kate'},\r\n        {id: 4, name: 'Svetlana'},\r\n        {id: 5, name: 'Natalie'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'I\\'m fine'},\r\n    ],\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof sendMessage>\r\n\r\nexport const dialogsReducer = (state: DialogsPageType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"dialogs/SEND-MESSAGE\":\r\n            debugger\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 4, message: action.newMessageText}]\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessage = (newMessageText: string) => ({type: 'dialogs/SEND-MESSAGE', newMessageText} as const)\r\n"],"sourceRoot":""}