{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Dialogs.tsx","hoc/WithAuthRedirect.tsx","Components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","className","styles","dialog","active","to","id","name","Message","message","maxLength20","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requiredField","Dialogs","dialogsElements","dialogsPage","dialogs","map","messagesElements","messages","mess","dialogsItems","values","sendMessage","newMessageText","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,qGCgBpMC,MARf,SAAoBC,GAChB,OACI,qBAAKC,UAAWC,IAAOC,OAAS,IAAMD,IAAOE,OAA7C,SACI,cAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,GAAjC,SAAsCN,EAAMO,UCCzCC,MANf,SAAiBR,GACb,OACI,qBAAKC,UAAWC,IAAOO,QAAvB,SAAiCT,EAAMS,W,kCCsC/C,IAAMC,EAAcC,YAAiB,IAYrC,IAAMC,EAAsBC,YAAwB,CAACC,KAAM,kBAA/BD,EAV5B,SAAwBb,GACpB,OACI,uBAAMe,SAAUf,EAAMgB,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAM,iBAAkBa,YAAa,qBAAsBC,SAAU,CAACC,IAAeZ,KAEjH,kDAQGa,EA7Cf,SAAiBvB,GAEb,IAAIwB,EAAkBxB,EAAMyB,YAAYC,QAAQC,KAAI,SAAAxB,GAAM,OAAI,cAAC,EAAD,CAAYI,KAAMJ,EAAOI,KAAMD,GAAIH,EAAOG,QACpGsB,EAAmB5B,EAAMyB,YAAYI,SAASF,KAAI,SAAAG,GAAI,OAAI,cAAC,EAAD,CAASrB,QAASqB,EAAKrB,aAOrF,OACI,sBAAKR,UAAWC,IAAOwB,QAAvB,UACI,qBAAKzB,UAAWC,IAAO6B,aAAvB,SACKP,IAEL,qBAAKvB,UAAWC,IAAO2B,SAAvB,SACI,8BAAMD,MAEV,8BACI,cAAChB,EAAD,CAAqBG,SAdb,SAACiB,GAEjBC,YAAYD,EAAOE,yB,uDChBvBC,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,S,QCQZE,sBACXC,aAPkB,SAACJ,GACnB,MAAO,CACHX,YAAaW,EAAMX,eAKE,CAACQ,mBDLC,SAACQ,GAAoC,IAC1DC,EADyD,4JAE3D,WACI,OAAKC,KAAK3C,MAAMqC,OACT,cAACI,EAAD,eAAeE,KAAK3C,QADI,cAAC,IAAD,CAAUK,GAAI,eAHU,GAC/BuC,IAAMH,WAOtC,OAAOD,YAAQL,EAARK,CAAoCE,KCJhCH,CAIVhB","file":"static/js/5.4b199e22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2LnUP\",\"dialogsItems\":\"Dialogs_dialogsItems__1q5BC\",\"active\":\"Dialogs_active__1VhuN\",\"dialog\":\"Dialogs_dialog__11bYs\",\"messages\":\"Dialogs_messages__1bkRE\",\"message\":\"Dialogs_message__-g6Lh\"};","import React from 'react';\r\nimport styles from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogItemType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nfunction DialogItem(props: DialogItemType) {\r\n    return (\r\n        <div className={styles.dialog + ' ' + styles.active}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport styles from './../Dialogs.module.css';\r\n\r\ntype MessageType = {\r\n    message: string\r\n}\r\n\r\nfunction Message(props: MessageType) {\r\n    return (\r\n        <div className={styles.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport {DialogsPageType} from '../../redux/store'\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {sendMessage} from \"../../redux/dialogsReducer\";\r\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\n\r\ntype PropsType = {\r\n    dialogsPage: DialogsPageType\r\n    sendMessage: (newMessageText: string) => void\r\n    isAuth: boolean\r\n}\r\n\r\nfunction Dialogs(props: PropsType) {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id}/>);\r\n    let messagesElements = props.dialogsPage.messages.map(mess => <Message message={mess.message}/>);\r\n\r\n    let addNewMessage = (values: FormDataType) => {\r\n        debugger\r\n        sendMessage(values.newMessageText)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={styles.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\ntype FormDataType = {\r\n    newMessageText: string\r\n}\r\n\r\nconst maxLength20 = maxLengthCreator(20)\r\n\r\nfunction AddMessageForm(props: InjectedFormProps<FormDataType>) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={'newMessageBody'} placeholder={'Enter your message'} validate={[requiredField, maxLength20]}/>\r\n\r\n            <button>Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm<FormDataType>({form: 'AddMessageForm'})(AddMessageForm)\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RootStateType} from \"../redux/store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStateForRedirectPropsType = {\r\n    isAuth: boolean\r\n}\r\nlet mapStateToPropsForRedirect = (state: RootStateType): MapStateForRedirectPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect =(Component: React.ComponentType) => {\r\n    class RedirectComponent extends React.Component<any, any> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","import React from 'react';\r\nimport {sendMessage} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {DialogsPageType, RootStateType} from \"../../redux/store\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    withAuthRedirect\r\n    )\r\n    (Dialogs)"],"sourceRoot":""}